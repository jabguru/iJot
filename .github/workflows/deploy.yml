name: Deploy

on:
  push:
    branches:
      - 'main'

jobs:
    android:
        runs-on: ubuntu-latest
        
        steps:
        - name: Checkout Code
          uses: actions/checkout@v3
        
        - name: Setup Flutter
          uses: subosito/flutter-action@v2
          with:
            channel: stable
            cache: true
        
        - name: Set up key.properties
          run: |
            echo "keyPassword=${{ secrets.KEY_PASSWORD }}" > android/key.properties
            echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
            echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
            echo "${{ secrets.STORE_FILE_CONTENT }}" | base64 --decode > android/key.jks
        
        - name: Set up local.properties
          run: |
            echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties
        
        - name: Set up Play Store Secret
          run: |
            echo "${{ secrets.PLAY_STORE_SECRET }}" | base64 --decode > android/playstore-credentials.json
        
        - name: Setup Fastlane
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: 2.6
            rubygems: latest
        
        - name: Build and Deploy
          run: |
            flutter pub get
            make deploy-android
        
    web:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Setup Flutter
          uses: subosito/flutter-action@v2
          with:
            channel: 'stable'
            cache: true

        - name: Make Web Build
          run: |
            flutter pub get
            flutter build web

        - name: Deploy Web Build
          uses: FirebaseExtended/action-hosting-deploy@v0
          with:
            repoToken: '${{ secrets.GITHUB_TOKEN }}'
            firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_IJOT_1DA7A }}'
            channelId: live
            projectId: ijot-1da7a


    tag:
        runs-on: ubuntu-latest
        needs: [android, web]
        
        steps:
        - name: Checkout Code
          uses: actions/checkout@v3
        
        - name: Get Flutter Version
          run: |
            versionName=`cat pubspec.yaml | grep -o 'version:[^:]*' | cut -f2 -d":" | xargs`
            echo "VERSION_NAME=v$versionName" >> $GITHUB_ENV
        
        - name: Create Tag and Release
          uses: "marvinpinto/action-automatic-releases@latest"
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            title: ${{ env.VERSION_NAME }}
            automatic_release_tag: ${{ env.VERSION_NAME }}
            draft: false
            prerelease: false
                
